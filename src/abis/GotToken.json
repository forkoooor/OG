{
  "contractName": "GotToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "possibleOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownsTokenOfContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "possibleOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "unsafeOwnsTokenOfContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "possibleOwner",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "contractAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownsTokenOfContracts",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"possibleOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownsTokenOfContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"possibleOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"contractAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownsTokenOfContracts\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"possibleOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unsafeOwnsTokenOfContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"nfttank.eth\",\"kind\":\"dev\",\"methods\":{\"ownsTokenOfContract(address,address,uint256)\":{\"details\":\"Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself. This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract (with a custom implementation because CryptoPunks do not implement the ERC721 standard). Does not throw errors but returns false if the real token owner could not be found or the token does not exist. Sample contract addresses on Mainnet   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8        Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6\"},\"ownsTokenOfContracts(address,address[],uint256)\":{\"details\":\"Checks whether a given address (possibleOwner) owns a given token by given contract addresses and the token id itself. This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract (with a custom implementation because CryptoPunks do not implement the ERC721 standard). Does not throw errors but returns false if the real token owner could not be found or the token does not exist.  Returns an array with the results at the given index of the array. Sample contract addresses on Mainnet   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8        Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6\"},\"unsafeOwnsTokenOfContract(address,address,uint256)\":{\"details\":\"Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself. This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract (with a custom implementation because CryptoPunks do not implement the ERC721 standard). Might revert execution if the contract address does not exist on the current net. Sample contract addresses on Mainnet   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8        Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6\"}},\"title\":\"Checks if a given address owns a token from a given ERC721 contract or the CryptoPunks contract (which does not implement ERC721)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/GotToken.sol\":\"GotToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/src/contracts/GotToken.sol\":{\"keccak256\":\"0xa12ab22da4a72ba3f8282e062f1f2162219c93cb19807d13a6365882f5be505e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dbecfd831805da31dd8ad349b21cb11676bcb903ca9bd010b31d990056ebf8e\",\"dweb:/ipfs/QmfCzW958A4RwJzN3eLY4BoNd29pYV752WyYWbTdvesdMx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610934806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639010729814610046578063ca04b4e614610076578063d00e7bbe146100a6575b600080fd5b610060600480360381019061005b919061059b565b6100d6565b60405161006d919061078a565b60405180910390f35b610090600480360381019061008b919061059b565b610177565b60405161009d919061078a565b60405180910390f35b6100c060048036038101906100bb91906105ea565b610362565b6040516100cd9190610768565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1663ca04b4e68585856040518463ffffffff1660e01b815260040161011593929190610731565b60206040518083038186803b15801561012d57600080fd5b505afa92505050801561015e57506040513d601f19601f8201168201806040525081019061015b9190610656565b60015b61016b5760009050610170565b809150505b9392505050565b600080733c6d0c0d7c818474a93a8a271e0bbdb2e52e71d8905060008173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561025d5760008290508073ffffffffffffffffffffffffffffffffffffffff166358178168866040518263ffffffff1660e01b815260040161020591906107a5565b60206040518083038186803b15801561021d57600080fd5b505afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190610572565b9150506102ef565b60008590508073ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b815260040161029b91906107a5565b60206040518083038186803b1580156102b357600080fd5b505afa1580156102c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102eb9190610572565b9150505b8073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480156103575750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b925050509392505050565b606060008484905067ffffffffffffffff8111156103a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103d75781602001602082028036833780820191505090505b50905060005b8585905081101561049e5761044087878784818110610425577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061043a9190610549565b866100d6565b828281518110610479577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019015159081151581525050808061049690610841565b9150506103dd565b5080915050949350505050565b6000813590506104ba816108b9565b92915050565b6000815190506104cf816108b9565b92915050565b60008083601f8401126104e757600080fd5b8235905067ffffffffffffffff81111561050057600080fd5b60208301915083602082028301111561051857600080fd5b9250929050565b60008151905061052e816108d0565b92915050565b600081359050610543816108e7565b92915050565b60006020828403121561055b57600080fd5b6000610569848285016104ab565b91505092915050565b60006020828403121561058457600080fd5b6000610592848285016104c0565b91505092915050565b6000806000606084860312156105b057600080fd5b60006105be868287016104ab565b93505060206105cf868287016104ab565b92505060406105e086828701610534565b9150509250925092565b6000806000806060858703121561060057600080fd5b600061060e878288016104ab565b945050602085013567ffffffffffffffff81111561062b57600080fd5b610637878288016104d5565b9350935050604061064a87828801610534565b91505092959194509250565b60006020828403121561066857600080fd5b60006106768482850161051f565b91505092915050565b600061068b8383610704565b60208301905092915050565b6106a0816107f9565b82525050565b60006106b1826107d0565b6106bb81856107e8565b93506106c6836107c0565b8060005b838110156106f75781516106de888261067f565b97506106e9836107db565b9250506001810190506106ca565b5085935050505092915050565b61070d8161080b565b82525050565b61071c8161080b565b82525050565b61072b81610837565b82525050565b60006060820190506107466000830186610697565b6107536020830185610697565b6107606040830184610722565b949350505050565b6000602082019050818103600083015261078281846106a6565b905092915050565b600060208201905061079f6000830184610713565b92915050565b60006020820190506107ba6000830184610722565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061080482610817565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061084c82610837565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561087f5761087e61088a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6108c2816107f9565b81146108cd57600080fd5b50565b6108d98161080b565b81146108e457600080fd5b50565b6108f081610837565b81146108fb57600080fd5b5056fea26469706673582212201f81947e8d90740dc583441569bb4bf13420c913153b269931c49cf0a71a035e64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80639010729814610046578063ca04b4e614610076578063d00e7bbe146100a6575b600080fd5b610060600480360381019061005b919061059b565b6100d6565b60405161006d919061078a565b60405180910390f35b610090600480360381019061008b919061059b565b610177565b60405161009d919061078a565b60405180910390f35b6100c060048036038101906100bb91906105ea565b610362565b6040516100cd9190610768565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1663ca04b4e68585856040518463ffffffff1660e01b815260040161011593929190610731565b60206040518083038186803b15801561012d57600080fd5b505afa92505050801561015e57506040513d601f19601f8201168201806040525081019061015b9190610656565b60015b61016b5760009050610170565b809150505b9392505050565b600080733c6d0c0d7c818474a93a8a271e0bbdb2e52e71d8905060008173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561025d5760008290508073ffffffffffffffffffffffffffffffffffffffff166358178168866040518263ffffffff1660e01b815260040161020591906107a5565b60206040518083038186803b15801561021d57600080fd5b505afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190610572565b9150506102ef565b60008590508073ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b815260040161029b91906107a5565b60206040518083038186803b1580156102b357600080fd5b505afa1580156102c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102eb9190610572565b9150505b8073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480156103575750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b925050509392505050565b606060008484905067ffffffffffffffff8111156103a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103d75781602001602082028036833780820191505090505b50905060005b8585905081101561049e5761044087878784818110610425577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061043a9190610549565b866100d6565b828281518110610479577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019015159081151581525050808061049690610841565b9150506103dd565b5080915050949350505050565b6000813590506104ba816108b9565b92915050565b6000815190506104cf816108b9565b92915050565b60008083601f8401126104e757600080fd5b8235905067ffffffffffffffff81111561050057600080fd5b60208301915083602082028301111561051857600080fd5b9250929050565b60008151905061052e816108d0565b92915050565b600081359050610543816108e7565b92915050565b60006020828403121561055b57600080fd5b6000610569848285016104ab565b91505092915050565b60006020828403121561058457600080fd5b6000610592848285016104c0565b91505092915050565b6000806000606084860312156105b057600080fd5b60006105be868287016104ab565b93505060206105cf868287016104ab565b92505060406105e086828701610534565b9150509250925092565b6000806000806060858703121561060057600080fd5b600061060e878288016104ab565b945050602085013567ffffffffffffffff81111561062b57600080fd5b610637878288016104d5565b9350935050604061064a87828801610534565b91505092959194509250565b60006020828403121561066857600080fd5b60006106768482850161051f565b91505092915050565b600061068b8383610704565b60208301905092915050565b6106a0816107f9565b82525050565b60006106b1826107d0565b6106bb81856107e8565b93506106c6836107c0565b8060005b838110156106f75781516106de888261067f565b97506106e9836107db565b9250506001810190506106ca565b5085935050505092915050565b61070d8161080b565b82525050565b61071c8161080b565b82525050565b61072b81610837565b82525050565b60006060820190506107466000830186610697565b6107536020830185610697565b6107606040830184610722565b949350505050565b6000602082019050818103600083015261078281846106a6565b905092915050565b600060208201905061079f6000830184610713565b92915050565b60006020820190506107ba6000830184610722565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061080482610817565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061084c82610837565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561087f5761087e61088a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6108c2816107f9565b81146108cd57600080fd5b50565b6108d98161080b565b81146108e457600080fd5b50565b6108f081610837565b81146108fb57600080fd5b5056fea26469706673582212201f81947e8d90740dc583441569bb4bf13420c913153b269931c49cf0a71a035e64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7506:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:25",
                "type": ""
              }
            ],
            "src": "7:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:80:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "225:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "240:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "234:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "225:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "283:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "256:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "193:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "201:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "209:5:25",
                "type": ""
              }
            ],
            "src": "152:143:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "408:277:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "457:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "466:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "469:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "459:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "459:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "459:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "436:6:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "444:4:25",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "432:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "432:17:25"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "451:3:25"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "428:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "428:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "421:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "421:35:25"
                  },
                  "nodeType": "YulIf",
                  "src": "418:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "482:30:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "505:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "492:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "492:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "482:6:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "555:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "564:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "567:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "557:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "557:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "557:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "527:6:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "535:18:25",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "524:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "524:30:25"
                  },
                  "nodeType": "YulIf",
                  "src": "521:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "580:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "596:6:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "604:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "592:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:17:25"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "580:8:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "663:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "672:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "675:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "665:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "665:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "665:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "628:8:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "642:6:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "650:4:25",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "638:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "638:17:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "624:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "624:32:25"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "658:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "621:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "621:41:25"
                  },
                  "nodeType": "YulIf",
                  "src": "618:2:25"
                }
              ]
            },
            "name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "375:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "383:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "391:8:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "401:6:25",
                "type": ""
              }
            ],
            "src": "318:367:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "751:77:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "761:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "776:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "770:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "761:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "816:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "792:23:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "792:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "792:30:25"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "729:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "737:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "745:5:25",
                "type": ""
              }
            ],
            "src": "691:137:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "918:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "905:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "896:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "961:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "934:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "934:33:25"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "864:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "872:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "880:5:25",
                "type": ""
              }
            ],
            "src": "834:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1045:196:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1091:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1100:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1103:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1093:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1093:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1093:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1066:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1075:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1062:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1062:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1087:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1058:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1058:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1055:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1117:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1132:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1146:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1136:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1161:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1196:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1207:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1192:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1192:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1216:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1171:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1161:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1015:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1026:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1038:6:25",
                "type": ""
              }
            ],
            "src": "979:262:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:207:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1370:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1379:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1382:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1372:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1372:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1372:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1345:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1354:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1341:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1341:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1366:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1337:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1337:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1334:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1396:128:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1411:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1425:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1415:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1440:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1486:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1497:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1482:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1482:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1506:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1450:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1450:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1440:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1294:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1305:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1317:6:25",
                "type": ""
              }
            ],
            "src": "1247:284:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1637:452:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1683:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1692:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1695:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1685:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1685:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1685:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1658:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1667:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1654:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1654:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1679:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1650:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1647:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1709:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1724:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1738:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1728:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1753:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1788:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1799:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1784:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1784:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1808:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1763:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1763:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1753:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1836:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1851:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1865:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1855:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1881:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1916:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1927:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1912:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1912:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1936:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1891:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1881:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1964:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1979:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1993:2:25",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1983:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2009:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2044:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2055:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2040:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2040:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2064:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2019:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2019:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2009:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1591:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1602:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1614:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1622:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1630:6:25",
                "type": ""
              }
            ],
            "src": "1537:552:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2230:580:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2276:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2285:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2288:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2278:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2278:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2278:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2251:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2260:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2247:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2247:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2272:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2243:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2243:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2240:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2302:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2317:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2331:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2321:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2346:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2381:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2392:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2377:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2377:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2401:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2356:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2356:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2346:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2429:246:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2444:46:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2475:9:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2486:2:25",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2471:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2471:18:25"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2458:12:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2458:32:25"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2448:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2537:16:25",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2546:1:25",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2549:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2539:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2539:12:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2539:12:25"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2509:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2517:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2506:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2506:30:25"
                      },
                      "nodeType": "YulIf",
                      "src": "2503:2:25"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2567:98:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2637:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2648:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2633:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2633:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2657:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2585:47:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2585:80:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2567:6:25"
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2575:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2685:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2700:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2714:2:25",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2704:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2730:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2765:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2776:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2761:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2761:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2785:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2740:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2740:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2730:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2176:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2187:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2199:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2207:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2215:6:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2223:6:25",
                "type": ""
              }
            ],
            "src": "2095:715:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2890:204:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2936:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2945:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2948:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2938:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2938:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2938:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2911:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2920:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2907:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2907:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2932:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2903:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2903:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2900:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2962:125:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2977:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2991:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2981:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3006:71:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3049:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3060:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3045:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3045:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3069:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3016:28:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3016:61:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3006:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2860:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2871:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2883:6:25",
                "type": ""
              }
            ],
            "src": "2816:278:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3174:93:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3212:6:25"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3220:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3184:27:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3184:40:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3184:40:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3233:28:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3251:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3256:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3247:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3247:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3233:10:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3147:6:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3155:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "3163:10:25",
                "type": ""
              }
            ],
            "src": "3100:167:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3338:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3355:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3378:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3360:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3360:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3348:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3348:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3348:37:25"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3326:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3333:3:25",
                "type": ""
              }
            ],
            "src": "3273:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3539:590:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3549:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3608:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_bool_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3563:44:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3563:51:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3553:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3623:90:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3701:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3706:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3630:70:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3630:83:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3623:3:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3722:68:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3784:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_bool_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3737:46:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3737:53:25"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "3726:7:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3799:21:25",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "3813:7:25"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3803:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3889:215:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3903:34:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3930:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3924:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3924:13:25"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3907:13:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3950:64:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "3995:13:25"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4010:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_bool_to_t_bool",
                            "nodeType": "YulIdentifier",
                            "src": "3957:37:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3957:57:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3950:3:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4027:67:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4087:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_bool_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4037:49:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4037:57:25"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4027:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3851:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3854:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3848:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3848:13:25"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3862:18:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3864:14:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3873:1:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3876:1:25",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3869:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3869:9:25"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3864:1:25"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3833:14:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3835:10:25",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3844:1:25",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "3839:1:25",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "3829:275:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4113:10:25",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4120:3:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4113:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3518:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3525:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3534:3:25",
                "type": ""
              }
            ],
            "src": "3421:708:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4184:50:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4201:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4221:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4206:14:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4206:21:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4194:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4194:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4194:34:25"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4172:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4179:3:25",
                "type": ""
              }
            ],
            "src": "4135:99:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4299:50:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4316:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4336:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4321:14:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4321:21:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4309:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4309:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4309:34:25"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4287:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4294:3:25",
                "type": ""
              }
            ],
            "src": "4240:109:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4420:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4437:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4460:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4442:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4442:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4430:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4430:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4430:37:25"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4408:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4415:3:25",
                "type": ""
              }
            ],
            "src": "4355:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4633:288:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4643:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4655:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4666:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4651:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4651:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4643:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4723:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4736:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4747:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4732:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4732:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4679:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4679:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4679:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4804:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4817:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4828:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4813:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4813:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4760:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4760:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4760:72:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4886:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4899:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4910:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4895:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4895:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4842:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4842:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4842:72:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4589:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4601:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4609:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4617:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4628:4:25",
                "type": ""
              }
            ],
            "src": "4479:442:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5069:219:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5079:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5091:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5102:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5087:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5087:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5079:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5126:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5137:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5122:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5122:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5145:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5151:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5141:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5141:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5115:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5115:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5115:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5171:110:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5267:6:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5276:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5179:87:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5179:102:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5171:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5041:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5053:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5064:4:25",
                "type": ""
              }
            ],
            "src": "4927:361:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5386:118:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5396:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5408:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5419:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5404:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5404:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5396:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5470:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5483:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5494:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5479:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5479:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5432:37:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5432:65:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5432:65:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5358:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5370:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5381:4:25",
                "type": ""
              }
            ],
            "src": "5294:210:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5608:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5618:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5630:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5641:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5626:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5626:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5618:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5698:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5711:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5722:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5707:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5707:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5654:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5654:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5654:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5580:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5592:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5603:4:25",
                "type": ""
              }
            ],
            "src": "5510:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5807:60:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5817:11:25",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "5825:3:25"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "5817:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5838:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "5850:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5855:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5846:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5846:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "5838:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_bool_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "5794:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5802:4:25",
                "type": ""
              }
            ],
            "src": "5738:129:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5944:40:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5955:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5971:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5965:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5965:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5955:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_bool_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5927:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5937:6:25",
                "type": ""
              }
            ],
            "src": "5873:111:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6062:38:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6072:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "6084:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6089:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6080:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6080:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "6072:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_bool_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "6049:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "6057:4:25",
                "type": ""
              }
            ],
            "src": "5990:110:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6214:73:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6231:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6236:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6224:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6224:19:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6224:19:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6252:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6271:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6276:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6267:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6267:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6252:11:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6186:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6191:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6202:11:25",
                "type": ""
              }
            ],
            "src": "6106:181:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6338:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6348:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6377:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6359:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6359:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6348:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6320:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6330:7:25",
                "type": ""
              }
            ],
            "src": "6293:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6437:48:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6447:32:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6472:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6465:6:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6465:13:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6458:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6458:21:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6447:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6419:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6429:7:25",
                "type": ""
              }
            ],
            "src": "6395:90:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6536:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6546:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6561:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6568:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6557:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6557:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6546:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6518:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6528:7:25",
                "type": ""
              }
            ],
            "src": "6491:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6668:32:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6678:16:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6689:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6678:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6650:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6660:7:25",
                "type": ""
              }
            ],
            "src": "6623:77:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6749:190:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6759:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6786:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6768:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6768:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6759:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6882:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6884:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6884:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6884:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6807:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6814:66:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6804:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6804:77:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6801:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6913:20:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6924:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6931:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6920:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6920:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6913:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6735:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6745:3:25",
                "type": ""
              }
            ],
            "src": "6706:233:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6973:152:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6990:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6993:77:25",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6983:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6983:88:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6983:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7087:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7090:4:25",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7080:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7080:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7080:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7111:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7114:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7104:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7104:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7104:15:25"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6945:180:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7174:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7231:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7240:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7243:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7233:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7233:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7233:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7197:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7222:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7204:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7204:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7194:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7194:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7187:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7187:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7184:2:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7167:5:25",
                "type": ""
              }
            ],
            "src": "7131:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7299:76:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7353:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7362:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7365:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7355:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7355:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7355:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7322:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7344:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "7329:14:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7329:21:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7319:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7319:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7312:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7312:40:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7309:2:25"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7292:5:25",
                "type": ""
              }
            ],
            "src": "7259:116:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7424:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7481:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7490:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7493:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7483:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7483:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7483:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7447:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7472:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "7454:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7454:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7444:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7444:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7437:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7437:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7434:2:25"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7417:5:25",
                "type": ""
              }
            ],
            "src": "7381:122:25"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1, value2 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_bool_to_t_bool(value0, pos) -> updatedPos {\n        abi_encode_t_bool_to_t_bool(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // bool[] -> bool[]\n    function abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bool_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bool_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bool_to_t_bool(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bool_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_dataslot_t_array$_t_bool_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_bool_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_bool_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "298:4167:17:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "298:4167:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1186:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2342:752;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4041:421;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1186:317;1301:4;1322;:30;;;1353:13;1368:15;1385:7;1322:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1318:176;;1476:5;1469:12;;;;1318:176;1433:1;1426:8;;;1186:317;;;;;;:::o;2342:752::-;2463:4;2482:34;2519:42;2482:79;;2572:22;2643:26;2624:45;;:15;:45;;;2620:384;;;2686:34;2744:26;2686:85;;2803:13;:32;;;2836:7;2803:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2786:58;;2620:384;;;;2886:19;2916:15;2886:46;;2964:11;:19;;;2984:7;2964:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2947:45;;2620:384;;3040:14;3023:31;;:13;:31;;;:63;;;;;3084:1;3058:28;;:14;:28;;;;3023:63;3016:70;;;;2342:752;;;;;:::o;4041:421::-;4170:13;4198:20;4232:17;;:24;;4221:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4198:59;;4275:9;4270:159;4294:17;;:24;;4290:1;:28;4270:159;;;4352:65;4372:13;4387:17;;4405:1;4387:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4409:7;4352:19;:65::i;:::-;4340:6;4347:1;4340:9;;;;;;;;;;;;;;;;;;;;;:77;;;;;;;;;;;4320:3;;;;;:::i;:::-;;;;4270:159;;;;4448:6;4441:13;;;4041:421;;;;;;:::o;7:139:25:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;318:367::-;;;451:3;444:4;436:6;432:17;428:27;418:2;;469:1;466;459:12;418:2;505:6;492:20;482:30;;535:18;527:6;524:30;521:2;;;567:1;564;557:12;521:2;604:4;596:6;592:17;580:29;;658:3;650:4;642:6;638:17;628:8;624:32;621:41;618:2;;;675:1;672;665:12;618:2;408:277;;;;;:::o;691:137::-;;776:6;770:13;761:22;;792:30;816:5;792:30;:::i;:::-;751:77;;;;:::o;834:139::-;;918:6;905:20;896:29;;934:33;961:5;934:33;:::i;:::-;886:87;;;;:::o;979:262::-;;1087:2;1075:9;1066:7;1062:23;1058:32;1055:2;;;1103:1;1100;1093:12;1055:2;1146:1;1171:53;1216:7;1207:6;1196:9;1192:22;1171:53;:::i;:::-;1161:63;;1117:117;1045:196;;;;:::o;1247:284::-;;1366:2;1354:9;1345:7;1341:23;1337:32;1334:2;;;1382:1;1379;1372:12;1334:2;1425:1;1450:64;1506:7;1497:6;1486:9;1482:22;1450:64;:::i;:::-;1440:74;;1396:128;1324:207;;;;:::o;1537:552::-;;;;1679:2;1667:9;1658:7;1654:23;1650:32;1647:2;;;1695:1;1692;1685:12;1647:2;1738:1;1763:53;1808:7;1799:6;1788:9;1784:22;1763:53;:::i;:::-;1753:63;;1709:117;1865:2;1891:53;1936:7;1927:6;1916:9;1912:22;1891:53;:::i;:::-;1881:63;;1836:118;1993:2;2019:53;2064:7;2055:6;2044:9;2040:22;2019:53;:::i;:::-;2009:63;;1964:118;1637:452;;;;;:::o;2095:715::-;;;;;2272:2;2260:9;2251:7;2247:23;2243:32;2240:2;;;2288:1;2285;2278:12;2240:2;2331:1;2356:53;2401:7;2392:6;2381:9;2377:22;2356:53;:::i;:::-;2346:63;;2302:117;2486:2;2475:9;2471:18;2458:32;2517:18;2509:6;2506:30;2503:2;;;2549:1;2546;2539:12;2503:2;2585:80;2657:7;2648:6;2637:9;2633:22;2585:80;:::i;:::-;2567:98;;;;2429:246;2714:2;2740:53;2785:7;2776:6;2765:9;2761:22;2740:53;:::i;:::-;2730:63;;2685:118;2230:580;;;;;;;:::o;2816:278::-;;2932:2;2920:9;2911:7;2907:23;2903:32;2900:2;;;2948:1;2945;2938:12;2900:2;2991:1;3016:61;3069:7;3060:6;3049:9;3045:22;3016:61;:::i;:::-;3006:71;;2962:125;2890:204;;;;:::o;3100:167::-;;3184:40;3220:3;3212:6;3184:40;:::i;:::-;3256:4;3251:3;3247:14;3233:28;;3174:93;;;;:::o;3273:118::-;3360:24;3378:5;3360:24;:::i;:::-;3355:3;3348:37;3338:53;;:::o;3421:708::-;;3563:51;3608:5;3563:51;:::i;:::-;3630:83;3706:6;3701:3;3630:83;:::i;:::-;3623:90;;3737:53;3784:5;3737:53;:::i;:::-;3813:7;3844:1;3829:275;3854:6;3851:1;3848:13;3829:275;;;3930:6;3924:13;3957:57;4010:3;3995:13;3957:57;:::i;:::-;3950:64;;4037:57;4087:6;4037:57;:::i;:::-;4027:67;;3889:215;3876:1;3873;3869:9;3864:14;;3829:275;;;3833:14;4120:3;4113:10;;3539:590;;;;;;;:::o;4135:99::-;4206:21;4221:5;4206:21;:::i;:::-;4201:3;4194:34;4184:50;;:::o;4240:109::-;4321:21;4336:5;4321:21;:::i;:::-;4316:3;4309:34;4299:50;;:::o;4355:118::-;4442:24;4460:5;4442:24;:::i;:::-;4437:3;4430:37;4420:53;;:::o;4479:442::-;;4666:2;4655:9;4651:18;4643:26;;4679:71;4747:1;4736:9;4732:17;4723:6;4679:71;:::i;:::-;4760:72;4828:2;4817:9;4813:18;4804:6;4760:72;:::i;:::-;4842;4910:2;4899:9;4895:18;4886:6;4842:72;:::i;:::-;4633:288;;;;;;:::o;4927:361::-;;5102:2;5091:9;5087:18;5079:26;;5151:9;5145:4;5141:20;5137:1;5126:9;5122:17;5115:47;5179:102;5276:4;5267:6;5179:102;:::i;:::-;5171:110;;5069:219;;;;:::o;5294:210::-;;5419:2;5408:9;5404:18;5396:26;;5432:65;5494:1;5483:9;5479:17;5470:6;5432:65;:::i;:::-;5386:118;;;;:::o;5510:222::-;;5641:2;5630:9;5626:18;5618:26;;5654:71;5722:1;5711:9;5707:17;5698:6;5654:71;:::i;:::-;5608:124;;;;:::o;5738:129::-;;5825:3;5817:11;;5855:4;5850:3;5846:14;5838:22;;5807:60;;;:::o;5873:111::-;;5971:5;5965:12;5955:22;;5944:40;;;:::o;5990:110::-;;6089:4;6084:3;6080:14;6072:22;;6062:38;;;:::o;6106:181::-;;6236:6;6231:3;6224:19;6276:4;6271:3;6267:14;6252:29;;6214:73;;;;:::o;6293:96::-;;6359:24;6377:5;6359:24;:::i;:::-;6348:35;;6338:51;;;:::o;6395:90::-;;6472:5;6465:13;6458:21;6447:32;;6437:48;;;:::o;6491:126::-;;6568:42;6561:5;6557:54;6546:65;;6536:81;;;:::o;6623:77::-;;6689:5;6678:16;;6668:32;;;:::o;6706:233::-;;6768:24;6786:5;6768:24;:::i;:::-;6759:33;;6814:66;6807:5;6804:77;6801:2;;;6884:18;;:::i;:::-;6801:2;6931:1;6924:5;6920:13;6913:20;;6749:190;;;:::o;6945:180::-;6993:77;6990:1;6983:88;7090:4;7087:1;7080:15;7114:4;7111:1;7104:15;7131:122;7204:24;7222:5;7204:24;:::i;:::-;7197:5;7194:35;7184:2;;7243:1;7240;7233:12;7184:2;7174:79;:::o;7259:116::-;7329:21;7344:5;7329:21;:::i;:::-;7322:5;7319:32;7309:2;;7365:1;7362;7355:12;7309:2;7299:76;:::o;7381:122::-;7454:24;7472:5;7454:24;:::i;:::-;7447:5;7444:35;7434:2;;7493:1;7490;7483:12;7434:2;7424:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\n/**\r\n * @title Checks if a given address owns a token from a given ERC721 contract or the CryptoPunks contract (which does not implement ERC721)\r\n * @author nfttank.eth\r\n */\r\ncontract GotToken {\r\n    \r\n    /**\r\n     * @dev Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself.\r\n     * This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\r\n     * (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\r\n     *\r\n     * Does not throw errors but returns false if the real token owner could not be found or the token does not exist.\r\n     *\r\n     * Sample contract addresses on Mainnet\r\n     *   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \r\n     *   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\r\n     *   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\r\n     *   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6\r\n     */     \r\n    function ownsTokenOfContract(address possibleOwner, address contractAddress, uint256 tokenId) public view returns (bool) {\r\n        try this.unsafeOwnsTokenOfContract(possibleOwner, contractAddress, tokenId) returns (bool b) {\r\n            return b;\r\n        } catch { \r\n            return false; \r\n        }  \r\n    }\r\n        \r\n    /**\r\n     * @dev Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself.\r\n     * This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\r\n     * (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\r\n     *\r\n     * Might revert execution if the contract address does not exist on the current net.\r\n     *\r\n     * Sample contract addresses on Mainnet\r\n     *   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \r\n     *   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\r\n     *   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\r\n     *   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6\r\n     */ \r\n    function unsafeOwnsTokenOfContract(address possibleOwner, address contractAddress, uint256 tokenId) public view returns (bool) {\r\n\r\n        address CryptoPunksContractMainnet = 0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8;\r\n        address realTokenOwner = address(0);\r\n\r\n        if (contractAddress == CryptoPunksContractMainnet) {\r\n            CryptoPunksInterface punksContract = CryptoPunksInterface(CryptoPunksContractMainnet);\r\n            realTokenOwner = punksContract.punkIndexToAddress(tokenId);\r\n        }\r\n        else {\r\n            IERC721 ercContract = IERC721(contractAddress);\r\n            realTokenOwner = ercContract.ownerOf(tokenId);\r\n        }\r\n\r\n        return possibleOwner == realTokenOwner && realTokenOwner != address(0);\r\n    }\r\n    \r\n\r\n    /**\r\n     * @dev Checks whether a given address (possibleOwner) owns a given token by given contract addresses and the token id itself.\r\n     * This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\r\n     * (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\r\n     * Does not throw errors but returns false if the real token owner could not be found or the token does not exist.\r\n     * \r\n     * Returns an array with the results at the given index of the array.\r\n     *\r\n     * Sample contract addresses on Mainnet\r\n     *   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \r\n     *   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\r\n     *   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\r\n     *   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6\r\n     */ \r\n    function ownsTokenOfContracts(address possibleOwner, address[] calldata contractAddresses, uint256 tokenId) public view returns (bool[] memory) {\r\n\r\n        bool[] memory result = new bool[](contractAddresses.length);\r\n\r\n        for (uint256 i = 0; i < contractAddresses.length; i++) {\r\n            result[i] = ownsTokenOfContract(possibleOwner, contractAddresses[i], tokenId);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * The CryptoPunks contract doesn't implement the ERC721 standard so we have to use this interface to call their method punkIndexToAddress()\r\n */\r\ninterface CryptoPunksInterface {\r\n    function punkIndexToAddress(uint tokenId) external view returns(address);\r\n}",
  "sourcePath": "D:\\Develop\\GitHub\\OG+\\src\\contracts\\GotToken.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/GotToken.sol",
    "exportedSymbols": {
      "CryptoPunksInterface": [
        3158
      ],
      "GotToken": [
        3149
      ],
      "IERC165": [
        2672
      ],
      "IERC721": [
        1700
      ]
    },
    "id": 3159,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2992,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:22:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3159,
        "sourceUnit": 1701,
        "src": "61:58:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2994,
          "nodeType": "StructuredDocumentation",
          "src": "123:173:17",
          "text": " @title Checks if a given address owns a token from a given ERC721 contract or the CryptoPunks contract (which does not implement ERC721)\n @author nfttank.eth"
        },
        "fullyImplemented": true,
        "id": 3149,
        "linearizedBaseContracts": [
          3149
        ],
        "name": "GotToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3024,
              "nodeType": "Block",
              "src": "1307:196:17",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 3017,
                        "nodeType": "Block",
                        "src": "1411:35:17",
                        "statements": [
                          {
                            "expression": {
                              "id": 3015,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3013,
                              "src": "1433:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 3005,
                            "id": 3016,
                            "nodeType": "Return",
                            "src": "1426:8:17"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 3018,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 3014,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 3013,
                            "mutability": "mutable",
                            "name": "b",
                            "nodeType": "VariableDeclaration",
                            "scope": 3018,
                            "src": "1403:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3012,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1403:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1402:8:17"
                      },
                      "src": "1394:52:17"
                    },
                    {
                      "block": {
                        "id": 3021,
                        "nodeType": "Block",
                        "src": "1453:41:17",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 3019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1476:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 3005,
                            "id": 3020,
                            "nodeType": "Return",
                            "src": "1469:12:17"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 3022,
                      "nodeType": "TryCatchClause",
                      "src": "1447:47:17"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 3008,
                        "name": "possibleOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "1353:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3009,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2999,
                        "src": "1368:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3010,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3001,
                        "src": "1385:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3006,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "1322:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GotToken_$3149",
                          "typeString": "contract GotToken"
                        }
                      },
                      "id": 3007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unsafeOwnsTokenOfContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3094,
                      "src": "1322:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) view external returns (bool)"
                      }
                    },
                    "id": 3011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1322:71:17",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3023,
                  "nodeType": "TryStatement",
                  "src": "1318:176:17"
                }
              ]
            },
            "documentation": {
              "id": 2995,
              "nodeType": "StructuredDocumentation",
              "src": "329:846:17",
              "text": " @dev Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself.\n This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\n (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\n Does not throw errors but returns false if the real token owner could not be found or the token does not exist.\n Sample contract addresses on Mainnet\n   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \n   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\n   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\n   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
            },
            "functionSelector": "90107298",
            "id": 3025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownsTokenOfContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2997,
                  "mutability": "mutable",
                  "name": "possibleOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "1215:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2999,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "1238:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3001,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "1263:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:65:17"
            },
            "returnParameters": {
              "id": 3005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3004,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "1301:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3003,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:6:17"
            },
            "scope": 3149,
            "src": "1186:317:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3093,
              "nodeType": "Block",
              "src": "2469:625:17",
              "statements": [
                {
                  "assignments": [
                    3038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3038,
                      "mutability": "mutable",
                      "name": "CryptoPunksContractMainnet",
                      "nodeType": "VariableDeclaration",
                      "scope": 3093,
                      "src": "2482:34:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3037,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2482:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3040,
                  "initialValue": {
                    "hexValue": "307833433644304330643763383138343734413933613841323731653042426462326535324537316438",
                    "id": 3039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2519:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2482:79:17"
                },
                {
                  "assignments": [
                    3042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3042,
                      "mutability": "mutable",
                      "name": "realTokenOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 3093,
                      "src": "2572:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3041,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3047,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2605:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2597:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3043,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2597:7:17",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2597:10:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:35:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3048,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "2624:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3049,
                      "name": "CryptoPunksContractMainnet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "2643:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2624:45:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3080,
                    "nodeType": "Block",
                    "src": "2871:133:17",
                    "statements": [
                      {
                        "assignments": [
                          3068
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3068,
                            "mutability": "mutable",
                            "name": "ercContract",
                            "nodeType": "VariableDeclaration",
                            "scope": 3080,
                            "src": "2886:19:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$1700",
                              "typeString": "contract IERC721"
                            },
                            "typeName": {
                              "id": 3067,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3066,
                                "name": "IERC721",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1700,
                                "src": "2886:7:17"
                              },
                              "referencedDeclaration": 1700,
                              "src": "2886:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$1700",
                                "typeString": "contract IERC721"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3072,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3070,
                              "name": "contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3030,
                              "src": "2916:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3069,
                            "name": "IERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1700,
                            "src": "2908:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721_$1700_$",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 3071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2908:24:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721_$1700",
                            "typeString": "contract IERC721"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2886:46:17"
                      },
                      {
                        "expression": {
                          "id": 3078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3073,
                            "name": "realTokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3042,
                            "src": "2947:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3076,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3032,
                                "src": "2984:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3074,
                                "name": "ercContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3068,
                                "src": "2964:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$1700",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 3075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1633,
                              "src": "2964:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 3077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2964:28:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2947:45:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3079,
                        "nodeType": "ExpressionStatement",
                        "src": "2947:45:17"
                      }
                    ]
                  },
                  "id": 3081,
                  "nodeType": "IfStatement",
                  "src": "2620:384:17",
                  "trueBody": {
                    "id": 3065,
                    "nodeType": "Block",
                    "src": "2671:185:17",
                    "statements": [
                      {
                        "assignments": [
                          3053
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3053,
                            "mutability": "mutable",
                            "name": "punksContract",
                            "nodeType": "VariableDeclaration",
                            "scope": 3065,
                            "src": "2686:34:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoPunksInterface_$3158",
                              "typeString": "contract CryptoPunksInterface"
                            },
                            "typeName": {
                              "id": 3052,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3051,
                                "name": "CryptoPunksInterface",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3158,
                                "src": "2686:20:17"
                              },
                              "referencedDeclaration": 3158,
                              "src": "2686:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CryptoPunksInterface_$3158",
                                "typeString": "contract CryptoPunksInterface"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3057,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3055,
                              "name": "CryptoPunksContractMainnet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3038,
                              "src": "2744:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3054,
                            "name": "CryptoPunksInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3158,
                            "src": "2723:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CryptoPunksInterface_$3158_$",
                              "typeString": "type(contract CryptoPunksInterface)"
                            }
                          },
                          "id": 3056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:48:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CryptoPunksInterface_$3158",
                            "typeString": "contract CryptoPunksInterface"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2686:85:17"
                      },
                      {
                        "expression": {
                          "id": 3063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3058,
                            "name": "realTokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3042,
                            "src": "2786:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3061,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3032,
                                "src": "2836:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3059,
                                "name": "punksContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3053,
                                "src": "2803:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptoPunksInterface_$3158",
                                  "typeString": "contract CryptoPunksInterface"
                                }
                              },
                              "id": 3060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "punkIndexToAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3157,
                              "src": "2803:32:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 3062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2803:41:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2786:58:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3064,
                        "nodeType": "ExpressionStatement",
                        "src": "2786:58:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3082,
                        "name": "possibleOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3028,
                        "src": "3023:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 3083,
                        "name": "realTokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3042,
                        "src": "3040:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3023:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3085,
                        "name": "realTokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3042,
                        "src": "3058:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3084:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3076:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3076:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3076:10:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3058:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3023:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3036,
                  "id": 3092,
                  "nodeType": "Return",
                  "src": "3016:70:17"
                }
              ]
            },
            "documentation": {
              "id": 3026,
              "nodeType": "StructuredDocumentation",
              "src": "1519:816:17",
              "text": " @dev Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself.\n This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\n (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\n Might revert execution if the contract address does not exist on the current net.\n Sample contract addresses on Mainnet\n   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \n   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\n   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\n   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
            },
            "functionSelector": "ca04b4e6",
            "id": 3094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsafeOwnsTokenOfContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3028,
                  "mutability": "mutable",
                  "name": "possibleOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "2377:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3030,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "2400:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2400:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3032,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "2425:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2376:65:17"
            },
            "returnParameters": {
              "id": 3036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3035,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "2463:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3034,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2463:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2462:6:17"
            },
            "scope": 3149,
            "src": "2342:752:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3147,
              "nodeType": "Block",
              "src": "4185:277:17",
              "statements": [
                {
                  "assignments": [
                    3112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3112,
                      "mutability": "mutable",
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 3147,
                      "src": "4198:20:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3110,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4198:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3111,
                        "nodeType": "ArrayTypeName",
                        "src": "4198:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3119,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3116,
                          "name": "contractAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3100,
                          "src": "4232:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        "id": 3117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4232:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4221:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bool[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3113,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4225:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3114,
                        "nodeType": "ArrayTypeName",
                        "src": "4225:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      }
                    },
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4198:59:17"
                },
                {
                  "body": {
                    "id": 3143,
                    "nodeType": "Block",
                    "src": "4325:104:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3131,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3112,
                              "src": "4340:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 3133,
                            "indexExpression": {
                              "id": 3132,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3121,
                              "src": "4347:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4340:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3135,
                                "name": "possibleOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3097,
                                "src": "4372:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 3136,
                                  "name": "contractAddresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3100,
                                  "src": "4387:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 3138,
                                "indexExpression": {
                                  "id": 3137,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3121,
                                  "src": "4405:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4387:20:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3139,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3102,
                                "src": "4409:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3134,
                              "name": "ownsTokenOfContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3025,
                              "src": "4352:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) view returns (bool)"
                              }
                            },
                            "id": 3140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4352:65:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4340:77:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3142,
                        "nodeType": "ExpressionStatement",
                        "src": "4340:77:17"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3124,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3121,
                      "src": "4290:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3125,
                        "name": "contractAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3100,
                        "src": "4294:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4294:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4290:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3144,
                  "initializationExpression": {
                    "assignments": [
                      3121
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3121,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3144,
                        "src": "4275:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4275:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3123,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4287:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4275:13:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4320:3:17",
                      "subExpression": {
                        "id": 3128,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3121,
                        "src": "4320:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3130,
                    "nodeType": "ExpressionStatement",
                    "src": "4320:3:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "4270:159:17"
                },
                {
                  "expression": {
                    "id": 3145,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3112,
                    "src": "4448:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "functionReturnParameters": 3107,
                  "id": 3146,
                  "nodeType": "Return",
                  "src": "4441:13:17"
                }
              ]
            },
            "documentation": {
              "id": 3095,
              "nodeType": "StructuredDocumentation",
              "src": "3108:926:17",
              "text": " @dev Checks whether a given address (possibleOwner) owns a given token by given contract addresses and the token id itself.\n This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\n (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\n Does not throw errors but returns false if the real token owner could not be found or the token does not exist.\n \n Returns an array with the results at the given index of the array.\n Sample contract addresses on Mainnet\n   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \n   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\n   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\n   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
            },
            "functionSelector": "d00e7bbe",
            "id": 3148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownsTokenOfContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3097,
                  "mutability": "mutable",
                  "name": "possibleOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "4071:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3100,
                  "mutability": "mutable",
                  "name": "contractAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "4094:36:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3098,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4094:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3099,
                    "nodeType": "ArrayTypeName",
                    "src": "4094:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3102,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "4132:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4132:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4070:78:17"
            },
            "returnParameters": {
              "id": 3107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3106,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "4170:13:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3104,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "4170:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3105,
                    "nodeType": "ArrayTypeName",
                    "src": "4170:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4169:15:17"
            },
            "scope": 3149,
            "src": "4041:421:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3159,
        "src": "298:4167:17"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3150,
          "nodeType": "StructuredDocumentation",
          "src": "4469:150:17",
          "text": " The CryptoPunks contract doesn't implement the ERC721 standard so we have to use this interface to call their method punkIndexToAddress()"
        },
        "fullyImplemented": false,
        "id": 3158,
        "linearizedBaseContracts": [
          3158
        ],
        "name": "CryptoPunksInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "58178168",
            "id": 3157,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "punkIndexToAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3152,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "4687:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:14:17"
            },
            "returnParameters": {
              "id": 3156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3155,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "4723:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4723:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4722:9:17"
            },
            "scope": 3158,
            "src": "4659:73:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3159,
        "src": "4621:114:17"
      }
    ],
    "src": "35:4700:17"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/GotToken.sol",
    "exportedSymbols": {
      "CryptoPunksInterface": [
        3158
      ],
      "GotToken": [
        3149
      ],
      "IERC165": [
        2672
      ],
      "IERC721": [
        1700
      ]
    },
    "id": 3159,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2992,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:22:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3159,
        "sourceUnit": 1701,
        "src": "61:58:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2994,
          "nodeType": "StructuredDocumentation",
          "src": "123:173:17",
          "text": " @title Checks if a given address owns a token from a given ERC721 contract or the CryptoPunks contract (which does not implement ERC721)\n @author nfttank.eth"
        },
        "fullyImplemented": true,
        "id": 3149,
        "linearizedBaseContracts": [
          3149
        ],
        "name": "GotToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3024,
              "nodeType": "Block",
              "src": "1307:196:17",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 3017,
                        "nodeType": "Block",
                        "src": "1411:35:17",
                        "statements": [
                          {
                            "expression": {
                              "id": 3015,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3013,
                              "src": "1433:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 3005,
                            "id": 3016,
                            "nodeType": "Return",
                            "src": "1426:8:17"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 3018,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 3014,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 3013,
                            "mutability": "mutable",
                            "name": "b",
                            "nodeType": "VariableDeclaration",
                            "scope": 3018,
                            "src": "1403:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3012,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1403:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1402:8:17"
                      },
                      "src": "1394:52:17"
                    },
                    {
                      "block": {
                        "id": 3021,
                        "nodeType": "Block",
                        "src": "1453:41:17",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 3019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1476:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 3005,
                            "id": 3020,
                            "nodeType": "Return",
                            "src": "1469:12:17"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 3022,
                      "nodeType": "TryCatchClause",
                      "src": "1447:47:17"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 3008,
                        "name": "possibleOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "1353:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3009,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2999,
                        "src": "1368:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3010,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3001,
                        "src": "1385:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3006,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "1322:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GotToken_$3149",
                          "typeString": "contract GotToken"
                        }
                      },
                      "id": 3007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unsafeOwnsTokenOfContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3094,
                      "src": "1322:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) view external returns (bool)"
                      }
                    },
                    "id": 3011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1322:71:17",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3023,
                  "nodeType": "TryStatement",
                  "src": "1318:176:17"
                }
              ]
            },
            "documentation": {
              "id": 2995,
              "nodeType": "StructuredDocumentation",
              "src": "329:846:17",
              "text": " @dev Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself.\n This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\n (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\n Does not throw errors but returns false if the real token owner could not be found or the token does not exist.\n Sample contract addresses on Mainnet\n   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \n   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\n   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\n   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
            },
            "functionSelector": "90107298",
            "id": 3025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownsTokenOfContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2997,
                  "mutability": "mutable",
                  "name": "possibleOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "1215:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2999,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "1238:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3001,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "1263:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:65:17"
            },
            "returnParameters": {
              "id": 3005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3004,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "1301:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3003,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:6:17"
            },
            "scope": 3149,
            "src": "1186:317:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3093,
              "nodeType": "Block",
              "src": "2469:625:17",
              "statements": [
                {
                  "assignments": [
                    3038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3038,
                      "mutability": "mutable",
                      "name": "CryptoPunksContractMainnet",
                      "nodeType": "VariableDeclaration",
                      "scope": 3093,
                      "src": "2482:34:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3037,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2482:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3040,
                  "initialValue": {
                    "hexValue": "307833433644304330643763383138343734413933613841323731653042426462326535324537316438",
                    "id": 3039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2519:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2482:79:17"
                },
                {
                  "assignments": [
                    3042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3042,
                      "mutability": "mutable",
                      "name": "realTokenOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 3093,
                      "src": "2572:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3041,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3047,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2605:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2597:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3043,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2597:7:17",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2597:10:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:35:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3048,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "2624:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3049,
                      "name": "CryptoPunksContractMainnet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "2643:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2624:45:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3080,
                    "nodeType": "Block",
                    "src": "2871:133:17",
                    "statements": [
                      {
                        "assignments": [
                          3068
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3068,
                            "mutability": "mutable",
                            "name": "ercContract",
                            "nodeType": "VariableDeclaration",
                            "scope": 3080,
                            "src": "2886:19:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$1700",
                              "typeString": "contract IERC721"
                            },
                            "typeName": {
                              "id": 3067,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3066,
                                "name": "IERC721",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1700,
                                "src": "2886:7:17"
                              },
                              "referencedDeclaration": 1700,
                              "src": "2886:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$1700",
                                "typeString": "contract IERC721"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3072,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3070,
                              "name": "contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3030,
                              "src": "2916:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3069,
                            "name": "IERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1700,
                            "src": "2908:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721_$1700_$",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 3071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2908:24:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721_$1700",
                            "typeString": "contract IERC721"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2886:46:17"
                      },
                      {
                        "expression": {
                          "id": 3078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3073,
                            "name": "realTokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3042,
                            "src": "2947:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3076,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3032,
                                "src": "2984:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3074,
                                "name": "ercContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3068,
                                "src": "2964:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$1700",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 3075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1633,
                              "src": "2964:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 3077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2964:28:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2947:45:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3079,
                        "nodeType": "ExpressionStatement",
                        "src": "2947:45:17"
                      }
                    ]
                  },
                  "id": 3081,
                  "nodeType": "IfStatement",
                  "src": "2620:384:17",
                  "trueBody": {
                    "id": 3065,
                    "nodeType": "Block",
                    "src": "2671:185:17",
                    "statements": [
                      {
                        "assignments": [
                          3053
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3053,
                            "mutability": "mutable",
                            "name": "punksContract",
                            "nodeType": "VariableDeclaration",
                            "scope": 3065,
                            "src": "2686:34:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoPunksInterface_$3158",
                              "typeString": "contract CryptoPunksInterface"
                            },
                            "typeName": {
                              "id": 3052,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3051,
                                "name": "CryptoPunksInterface",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3158,
                                "src": "2686:20:17"
                              },
                              "referencedDeclaration": 3158,
                              "src": "2686:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CryptoPunksInterface_$3158",
                                "typeString": "contract CryptoPunksInterface"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3057,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3055,
                              "name": "CryptoPunksContractMainnet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3038,
                              "src": "2744:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3054,
                            "name": "CryptoPunksInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3158,
                            "src": "2723:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CryptoPunksInterface_$3158_$",
                              "typeString": "type(contract CryptoPunksInterface)"
                            }
                          },
                          "id": 3056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:48:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CryptoPunksInterface_$3158",
                            "typeString": "contract CryptoPunksInterface"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2686:85:17"
                      },
                      {
                        "expression": {
                          "id": 3063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3058,
                            "name": "realTokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3042,
                            "src": "2786:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3061,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3032,
                                "src": "2836:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3059,
                                "name": "punksContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3053,
                                "src": "2803:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptoPunksInterface_$3158",
                                  "typeString": "contract CryptoPunksInterface"
                                }
                              },
                              "id": 3060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "punkIndexToAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3157,
                              "src": "2803:32:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 3062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2803:41:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2786:58:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3064,
                        "nodeType": "ExpressionStatement",
                        "src": "2786:58:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3082,
                        "name": "possibleOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3028,
                        "src": "3023:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 3083,
                        "name": "realTokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3042,
                        "src": "3040:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3023:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3085,
                        "name": "realTokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3042,
                        "src": "3058:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3084:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3076:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3076:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3076:10:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3058:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3023:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3036,
                  "id": 3092,
                  "nodeType": "Return",
                  "src": "3016:70:17"
                }
              ]
            },
            "documentation": {
              "id": 3026,
              "nodeType": "StructuredDocumentation",
              "src": "1519:816:17",
              "text": " @dev Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself.\n This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\n (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\n Might revert execution if the contract address does not exist on the current net.\n Sample contract addresses on Mainnet\n   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \n   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\n   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\n   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
            },
            "functionSelector": "ca04b4e6",
            "id": 3094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsafeOwnsTokenOfContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3028,
                  "mutability": "mutable",
                  "name": "possibleOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "2377:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3030,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "2400:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2400:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3032,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "2425:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2376:65:17"
            },
            "returnParameters": {
              "id": 3036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3035,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "2463:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3034,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2463:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2462:6:17"
            },
            "scope": 3149,
            "src": "2342:752:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3147,
              "nodeType": "Block",
              "src": "4185:277:17",
              "statements": [
                {
                  "assignments": [
                    3112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3112,
                      "mutability": "mutable",
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 3147,
                      "src": "4198:20:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3110,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4198:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3111,
                        "nodeType": "ArrayTypeName",
                        "src": "4198:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3119,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3116,
                          "name": "contractAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3100,
                          "src": "4232:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        "id": 3117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4232:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4221:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bool[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3113,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4225:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3114,
                        "nodeType": "ArrayTypeName",
                        "src": "4225:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      }
                    },
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4198:59:17"
                },
                {
                  "body": {
                    "id": 3143,
                    "nodeType": "Block",
                    "src": "4325:104:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3131,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3112,
                              "src": "4340:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 3133,
                            "indexExpression": {
                              "id": 3132,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3121,
                              "src": "4347:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4340:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3135,
                                "name": "possibleOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3097,
                                "src": "4372:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 3136,
                                  "name": "contractAddresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3100,
                                  "src": "4387:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 3138,
                                "indexExpression": {
                                  "id": 3137,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3121,
                                  "src": "4405:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4387:20:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3139,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3102,
                                "src": "4409:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3134,
                              "name": "ownsTokenOfContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3025,
                              "src": "4352:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) view returns (bool)"
                              }
                            },
                            "id": 3140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4352:65:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4340:77:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3142,
                        "nodeType": "ExpressionStatement",
                        "src": "4340:77:17"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3124,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3121,
                      "src": "4290:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3125,
                        "name": "contractAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3100,
                        "src": "4294:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4294:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4290:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3144,
                  "initializationExpression": {
                    "assignments": [
                      3121
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3121,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3144,
                        "src": "4275:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4275:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3123,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4287:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4275:13:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4320:3:17",
                      "subExpression": {
                        "id": 3128,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3121,
                        "src": "4320:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3130,
                    "nodeType": "ExpressionStatement",
                    "src": "4320:3:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "4270:159:17"
                },
                {
                  "expression": {
                    "id": 3145,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3112,
                    "src": "4448:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "functionReturnParameters": 3107,
                  "id": 3146,
                  "nodeType": "Return",
                  "src": "4441:13:17"
                }
              ]
            },
            "documentation": {
              "id": 3095,
              "nodeType": "StructuredDocumentation",
              "src": "3108:926:17",
              "text": " @dev Checks whether a given address (possibleOwner) owns a given token by given contract addresses and the token id itself.\n This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract\n (with a custom implementation because CryptoPunks do not implement the ERC721 standard).\n Does not throw errors but returns false if the real token owner could not be found or the token does not exist.\n \n Returns an array with the results at the given index of the array.\n Sample contract addresses on Mainnet\n   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8     \n   Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\n   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C\n   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
            },
            "functionSelector": "d00e7bbe",
            "id": 3148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownsTokenOfContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3097,
                  "mutability": "mutable",
                  "name": "possibleOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "4071:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3100,
                  "mutability": "mutable",
                  "name": "contractAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "4094:36:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3098,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4094:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3099,
                    "nodeType": "ArrayTypeName",
                    "src": "4094:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3102,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "4132:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4132:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4070:78:17"
            },
            "returnParameters": {
              "id": 3107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3106,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "4170:13:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3104,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "4170:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3105,
                    "nodeType": "ArrayTypeName",
                    "src": "4170:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4169:15:17"
            },
            "scope": 3149,
            "src": "4041:421:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3159,
        "src": "298:4167:17"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3150,
          "nodeType": "StructuredDocumentation",
          "src": "4469:150:17",
          "text": " The CryptoPunks contract doesn't implement the ERC721 standard so we have to use this interface to call their method punkIndexToAddress()"
        },
        "fullyImplemented": false,
        "id": 3158,
        "linearizedBaseContracts": [
          3158
        ],
        "name": "CryptoPunksInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "58178168",
            "id": 3157,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "punkIndexToAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3152,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "4687:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:14:17"
            },
            "returnParameters": {
              "id": 3156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3155,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "4723:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4723:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4722:9:17"
            },
            "scope": 3158,
            "src": "4659:73:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3159,
        "src": "4621:114:17"
      }
    ],
    "src": "35:4700:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x128F9533FfcC46239f44834C74a20184Db212DaD",
      "transactionHash": "0x61658490f8576d6e6405dba95b23f89d86355427f5eefacc9b1652a5b6426a05"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x270f01a39Aff7422dfCc695733605DA8968df701",
      "transactionHash": "0xf88aa6377801ade53575a44da114b9871b65cabe7d63703fdf2c93d77a9101bb"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-02-02T23:16:42.526Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "nfttank.eth",
    "kind": "dev",
    "methods": {
      "ownsTokenOfContract(address,address,uint256)": {
        "details": "Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself. This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract (with a custom implementation because CryptoPunks do not implement the ERC721 standard). Does not throw errors but returns false if the real token owner could not be found or the token does not exist. Sample contract addresses on Mainnet   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8        Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
      },
      "ownsTokenOfContracts(address,address[],uint256)": {
        "details": "Checks whether a given address (possibleOwner) owns a given token by given contract addresses and the token id itself. This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract (with a custom implementation because CryptoPunks do not implement the ERC721 standard). Does not throw errors but returns false if the real token owner could not be found or the token does not exist.  Returns an array with the results at the given index of the array. Sample contract addresses on Mainnet   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8        Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
      },
      "unsafeOwnsTokenOfContract(address,address,uint256)": {
        "details": "Checks whether a given address (possibleOwner) owns a given token by its contract address and the token id itself. This method can only check contracts implementing the ERC721 standard and in addition the CryptoPunks contract (with a custom implementation because CryptoPunks do not implement the ERC721 standard). Might revert execution if the contract address does not exist on the current net. Sample contract addresses on Mainnet   CryptoPunks:           0x3C6D0C0d7c818474A93a8A271e0BBdb2e52E71d8        Bored Ape Yacht Club:  0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D   Cool Cats:             0x1A92f7381B9F03921564a437210bB9396471050C   CrypToadz:             0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6"
      }
    },
    "title": "Checks if a given address owns a token from a given ERC721 contract or the CryptoPunks contract (which does not implement ERC721)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}